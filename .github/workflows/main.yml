# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [main]
    pull_request:
        branches: [main]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.ACCESSKEYID}}
                aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
                aws-region: us-east-1
 
            - name: Test, Zip, Upload to S3
              run: |
                  aws --version
                  
                  cd quoterepo/serverSide

                  TEST=$(node testAllQuotes.js)
                  echo "${TEST}"

                  SUB='FAIL'
                  if [[ "$TEST" == *"$SUB"* ]]; then
                    echo 'Unit tests fail'
                    exit 1 
                    fi
                  cd ..
                  tar -cvf deployment.tar data serverSide
                  gzip deployment.tar
                  aws s3 cp deployment.tar.gz "s3://asmit-work-bucket/deployment.tar.gz"
                  export AWS_LINUX_AMI="ami-05a48905f89e50bbb"
                  export MY_KEY_PAIR="engclass"
                  export MY_PUBLIC_SUBNET="subnet-d5654bb3"
                  export MY_SECURITY_GROUP="sg-03b1f6e5cbfe9a562"
                  ls
                  aws --region us-east-1 ec2 run-instances \
                  --image-id $AWS_LINUX_AMI \
                  --count 1 \
                  --instance-type t2.micro \
                  --subnet-id $MY_PUBLIC_SUBNET \
                  --security-group-ids $MY_SECURITY_GROUP \
                  --iam-instance-profile Name="ec2-s3" \
                  --key-name $MY_KEY_PAIR \
                  --tag-specifications 'ResourceType=instance, Tags=[{Key=name, Value=quote_server}]'
                  
            - name: AWS Deploy push
              run: |
                aws deploy push \
                 --application-name quote \
                 --description "This is a revision again" \
                 --ignore-hidden-files \
                 --s3-location s3://asmit-work-bucket/deployment.tar.gz \
                 --source .      

            - name: Create CodeDeploy Deployment
              run: |
                  aws deploy create-deployment \
                   --application-name quote \
                   --deployment-group-name quote \
                   --deployment-config-name CodeDeployDefault.OneAtATime \
                   --file-exists-behavior OVERWRITE \
                   --s3-location bucket=asmit-work-bucket,key=deployment.tar.gz,bundleType=zip \
                         
