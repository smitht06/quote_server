# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [main]
    pull_request:
        branches: [main]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.ACCESSKEYID}}
                aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
                aws-region: us-east-1
            
            - name: Public IP
              id: ip
              uses: haythem/public-ip@v1.2    
            
            - name: Test and Zip
              run: |
                   echo ${{ steps.ip.outputs.ipv4 }}
                   cd quoterepo/serverSide 
                   TEST=$(node testAllQuotes.js)
                   echo "${TEST}" 
                   SUB='FAIL'
                   if [[ "$TEST" == *"$SUB"* ]]; then
                       echo 'Unit tests fail'
                       exit 1 
                       fi
                   aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/w6u2o8k8
                   docker build -t quoterepo .
                   docker tag quoterepo:latest public.ecr.aws/w6u2o8k8/quoterepo:latest
                   docker push public.ecr.aws/w6u2o8k8/quoterepo:latest
                   kubectl apply -f deployment.yml

          
                   
