# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [main]
    pull_request:
        branches: [main]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.ACCESSKEYID}}
                aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
                aws-region: us-east-1
            
            - name: Public IP
              id: ip
              uses: haythem/public-ip@v1.2    
            
            - name: Test and Zip
              run: |
                   echo ${{ steps.ip.outputs.ipv4 }}
                    
  
                   cd quoterepo/serverSide
                    
                   TEST=$(node testAllQuotes.js)
                   echo "${TEST}"
                    
                   SUB='FAIL'
                   if [[ "$TEST" == *"$SUB"* ]]; then
                       echo 'Unit tests fail'
                       exit 1 
                       fi
                   cd ..
                   tar -cvf deployment.tar data serverSide
                   ls
                   gzip deployment.tar
  
  
                  
            - name: Start EC2 Test Instance
              run: |
                  aws ec2 authorize-security-group-ingress \
                  --group-name sg-03b1f6e5cbfe9a562 \
                  --protocol tcp \
                  --port 3000 \
                  --cidr ${{ steps.ip.outputs.ipv4 }}     
                  aws ec2 start-instances --instance-ids i-03fd5f81236535b8f
                  
            - name: Push revision to S3
              run: |
                aws deploy push \
                 --application-name quote \
                 --description "This is a revision again" \
                 --ignore-hidden-files \
                 --s3-location s3://asmit-work-bucket/deployment.tar.gz \
                 --source .      

            - name: Create Deployment
              run: |
                  aws deploy create-deployment \
                   --application-name quote \
                   --deployment-group-name quote \
                   --deployment-config-name CodeDeployDefault.OneAtATime \
                   --file-exists-behavior OVERWRITE \
                   --s3-location bucket=asmit-work-bucket,key=deployment.tar.gz,bundleType=zip \
                         
